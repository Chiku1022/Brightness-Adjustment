# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'UI\main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_BrightnessAdjust(object):
    def setupUi(self, BrightnessAdjust):
        BrightnessAdjust.setObjectName("BrightnessAdjust")
        BrightnessAdjust.resize(392, 206)
        self.centralwidget = QtWidgets.QWidget(BrightnessAdjust)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.brightnessLabel = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Arial Rounded MT Bold")
        font.setPointSize(15)
        self.brightnessLabel.setFont(font)
        self.brightnessLabel.setObjectName("brightnessLabel")
        self.verticalLayout.addWidget(self.brightnessLabel)
        self.controlWidgets = QtWidgets.QHBoxLayout()
        self.controlWidgets.setObjectName("controlWidgets")
        self.horizontalSlider = QtWidgets.QSlider(self.centralwidget)
        self.horizontalSlider.setMouseTracking(True)
        self.horizontalSlider.setMinimum(10)
        self.horizontalSlider.setMaximum(100)
        self.horizontalSlider.setProperty("value", 100)
        self.horizontalSlider.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSlider.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSlider.setObjectName("horizontalSlider")
        self.controlWidgets.addWidget(self.horizontalSlider)
        self.brightnessLevel = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(14)
        self.brightnessLevel.setFont(font)
        self.brightnessLevel.setObjectName("brightnessLevel")
        self.controlWidgets.addWidget(self.brightnessLevel)
        self.resetButton = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.resetButton.setFont(font)
        self.resetButton.setObjectName("resetButton")
        self.controlWidgets.addWidget(self.resetButton)
        self.verticalLayout.addLayout(self.controlWidgets)
        self.advancedModeWidgets = QtWidgets.QVBoxLayout()
        self.advancedModeWidgets.setObjectName("advancedModeWidgets")
        self.advancedModeCheckbox = QtWidgets.QCheckBox(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(12)
        self.advancedModeCheckbox.setFont(font)
        self.advancedModeCheckbox.setToolTip("")
        self.advancedModeCheckbox.setObjectName("advancedModeCheckbox")
        self.advancedModeWidgets.addWidget(self.advancedModeCheckbox)
        self.advancedModeWarningLabel = QtWidgets.QLabel(self.centralwidget)
        self.advancedModeWarningLabel.setMinimumSize(QtCore.QSize(0, 52))
        self.advancedModeWarningLabel.setWordWrap(True)
        self.advancedModeWarningLabel.setObjectName("advancedModeWarningLabel")
        self.advancedModeWidgets.addWidget(self.advancedModeWarningLabel)
        self.verticalLayout.addLayout(self.advancedModeWidgets)
        BrightnessAdjust.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(BrightnessAdjust)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 392, 21))
        self.menuBar.setObjectName("menuBar")
        self.menuAbout = QtWidgets.QMenu(self.menuBar)
        self.menuAbout.setObjectName("menuAbout")
        self.menuFile = QtWidgets.QMenu(self.menuBar)
        self.menuFile.setObjectName("menuFile")
        BrightnessAdjust.setMenuBar(self.menuBar)
        self.statusBar = QtWidgets.QStatusBar(BrightnessAdjust)
        self.statusBar.setObjectName("statusBar")
        BrightnessAdjust.setStatusBar(self.statusBar)
        self.actionAbout_App = QtWidgets.QAction(BrightnessAdjust)
        self.actionAbout_App.setObjectName("actionAbout_App")
        self.actionAbout_Developer = QtWidgets.QAction(BrightnessAdjust)
        self.actionAbout_Developer.setObjectName("actionAbout_Developer")
        self.actionClose = QtWidgets.QAction(BrightnessAdjust)
        self.actionClose.setObjectName("actionClose")
        self.actionReset = QtWidgets.QAction(BrightnessAdjust)
        self.actionReset.setObjectName("actionReset")
        self.menuAbout.addAction(self.actionAbout_App)
        self.menuAbout.addAction(self.actionAbout_Developer)
        self.menuFile.addAction(self.actionReset)
        self.menuFile.addAction(self.actionClose)
        self.menuBar.addAction(self.menuFile.menuAction())
        self.menuBar.addAction(self.menuAbout.menuAction())

        self.retranslateUi(BrightnessAdjust)
        QtCore.QMetaObject.connectSlotsByName(BrightnessAdjust)

    def retranslateUi(self, BrightnessAdjust):
        _translate = QtCore.QCoreApplication.translate
        BrightnessAdjust.setWindowTitle(_translate("BrightnessAdjust", "Brightness Adjustment"))
        self.brightnessLabel.setText(_translate("BrightnessAdjust", "Use the Slider to Adjust the Brightness"))
        self.horizontalSlider.setToolTip(_translate("BrightnessAdjust", "Slide to Adjust"))
        self.horizontalSlider.setStatusTip(_translate("BrightnessAdjust", "Adjusts the brightness to specified percentage."))
        self.brightnessLevel.setStatusTip(_translate("BrightnessAdjust", "Current brightness percentage."))
        self.brightnessLevel.setText(_translate("BrightnessAdjust", "100"))
        self.resetButton.setStatusTip(_translate("BrightnessAdjust", "Resets the brightness to 100%"))
        self.resetButton.setText(_translate("BrightnessAdjust", "Reset"))
        self.advancedModeCheckbox.setStatusTip(_translate("BrightnessAdjust", "Enables Advanced Mode for increasing brightness beyound 100%"))
        self.advancedModeCheckbox.setText(_translate("BrightnessAdjust", "Advanced Mode"))
        self.advancedModeWarningLabel.setText(_translate("BrightnessAdjust", "This mode helps you to increase screen brightness beyond 100% making screen more brighter.\n"
"You should enable this mode only when required.\n"
"Exposure to high brightness for longer period can harm your eyes."))
        self.menuAbout.setTitle(_translate("BrightnessAdjust", "Help"))
        self.menuFile.setTitle(_translate("BrightnessAdjust", "File"))
        self.actionAbout_App.setText(_translate("BrightnessAdjust", "About App"))
        self.actionAbout_App.setStatusTip(_translate("BrightnessAdjust", "Displays the information about the app."))
        self.actionAbout_Developer.setText(_translate("BrightnessAdjust", "About Developer"))
        self.actionAbout_Developer.setStatusTip(_translate("BrightnessAdjust", "Displays the information about the app developer."))
        self.actionClose.setText(_translate("BrightnessAdjust", "Close"))
        self.actionClose.setStatusTip(_translate("BrightnessAdjust", "Closes the Application."))
        self.actionReset.setText(_translate("BrightnessAdjust", "Reset"))
        self.actionReset.setStatusTip(_translate("BrightnessAdjust", "Resets the app and removes all configurations."))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    BrightnessAdjust = QtWidgets.QMainWindow()
    ui = Ui_BrightnessAdjust()
    ui.setupUi(BrightnessAdjust)
    BrightnessAdjust.show()
    sys.exit(app.exec_())
